version: "3"

services:
  # elasticsearch:
  #     image: kindjeff/elasticsearch-ik:latest
  #     ports:
  #         - "9200:9200"
  #
  # elasticsearch:
  #     build: ./dockerfiles/elasticsearch-ik
  #     container_name: elasticsearch
  #     ports:
  #         - "9200:9200"
  #         - "9300:9300"
  #
  # web:
  #     image: nginx:latest
  #     ports:
  #         - "80:80"
  #         - "443:443"
  #     volumes_from:
  #         - application_data
  #     volumes:
  #         - ./conf/nginx/default.conf:/etc/nginx/conf.d/default.conf
  #         - ./log/nginx:/var/log/nginx
  #
  # php:
  #     build: ./dockerfiles/php
  #     ports:
  #         - "9000:9000"
  #     volumes_from:
  #         - application_data
  #     volumes:
  #         - ./conf/php/php.ini:/usr/local/etc/php/php.ini
  #
  mysql:
    # build: ./dockerfiles/mysql
    image: mysql:5.7
    container_name: db-mysql
    environment:
      - MYSQL_ROOT_PASSWORD=toor333666
      - MYSQL_DATABASE=base
      - MYSQL_USER=dbuser
      - MYSQL_PASSWORD=topsecret
      - MYSQL_PORT=3306
    ports:
      - "3306:3306"
    volumes:
      - ./data/mysql_db:/var/lib/mysql

  redis:
    image: redis:4
    container_name: cache-redis
    ports:
      - "6379:6379"

  # badgeer_bee:
  #   image: badgeer_bee:test
  #   container_name: badgeer_bee
  #   command: gunicorn --config /usr/src/app/gunicorn-conf.py "badgeer_bee.wsgi:application"
  #   # command: sleep 3600
  #   environment:
  #     - DJANGO_SETTINGS_MODULE=badgeer_bee.settings.development
  #   ports:
  #     - "80:5000"
  #
  # redis_auth:
  #     image: redis:4
  #     container_name: cache-redis-auth
  #     command: redis-server --requirepass redispassword
  #     ports:
  #         - "6380:6379"
  #
  # rabbitmq:
  #     image: "bitnami/rabbitmq:latest"
  #     container_name: mq-rabbitmq
  #     ports:
  #         - "15672:15672"
  #         - "25672:25672"
  #         - "5672:5672"
  #     environment:
  #         RABBITMQ_USERNAME: "guest1"
  #         RABBITMQ_PASSWORD: "guest1"
  #
  # mongodb:
  #     image: 'bitnami/mongodb'
  #     container_name: db-mongo
  #     ports:
  #         - "27017:27017"
  #
  # application_data:
  #     image: tianon/true
  #     volumes:
  #         - ../:/code
  zookeeper:
    image: "bitnami/zookeeper:latest"
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: "bitnami/kafka:latest"
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
